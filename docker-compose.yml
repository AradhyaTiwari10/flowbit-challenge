version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: flowbit-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: flowbit
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - flowbit-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: flowbit-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - flowbit-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Node.js Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
      target: production
    container_name: flowbit-backend
    restart: unless-stopped
    environment:
      NODE_ENV: production
      PORT: 8000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/flowbit?authSource=admin
      REDIS_URL: redis://redis:6379
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
      JWT_REFRESH_SECRET: ${JWT_REFRESH_SECRET:-your-refresh-secret-change-in-production}
      N8N_WEBHOOK_SECRET: ${N8N_WEBHOOK_SECRET:-your-webhook-secret}
      N8N_BASE_URL: http://n8n:5678
      CORS_ORIGIN: http://localhost:3000
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - /app/node_modules
    depends_on:
      mongodb:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - flowbit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # React Frontend Shell
  frontend-shell:
    build:
      context: ./frontend/shell
      dockerfile: Dockerfile
      target: production
    container_name: flowbit-frontend-shell
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000
    ports:
      - "3000:3000"
    volumes:
      - ./frontend/shell:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flowbit-network

  # Support Tickets Micro-frontend
  frontend-support:
    build:
      context: ./frontend/support-tickets
      dockerfile: Dockerfile
      target: production
    container_name: flowbit-frontend-support
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000
    ports:
      - "3001:3001"
    volumes:
      - ./frontend/support-tickets:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flowbit-network

  # Admin Dashboard Micro-frontend
  frontend-admin:
    build:
      context: ./frontend/admin-dashboard
      dockerfile: Dockerfile
      target: production
    container_name: flowbit-frontend-admin
    restart: unless-stopped
    environment:
      REACT_APP_API_URL: http://localhost:8000
      REACT_APP_WS_URL: ws://localhost:8000
    ports:
      - "3002:3002"
    volumes:
      - ./frontend/admin-dashboard:/app
      - /app/node_modules
    depends_on:
      - backend
    networks:
      - flowbit-network

  # n8n Workflow Engine
  n8n:
    image: n8nio/n8n:latest
    container_name: flowbit-n8n
    restart: unless-stopped
    environment:
      N8N_BASIC_AUTH_ACTIVE: true
      N8N_BASIC_AUTH_USER: admin
      N8N_BASIC_AUTH_PASSWORD: admin123
      N8N_HOST: 0.0.0.0
      N8N_PORT: 5678
      N8N_PROTOCOL: http
      N8N_USER_MANAGEMENT_DISABLED: true
      N8N_WEBHOOK_URL: http://localhost:5678
      N8N_WEBHOOK_TEST_URL: http://localhost:5678
      WEBHOOK_TUNNEL_URL: http://localhost:5678
      GENERIC_TIMEZONE: UTC
      DB_TYPE: sqlite
      DB_SQLITE_DATABASE: /home/node/.n8n/database.sqlite
    ports:
      - "5678:5678"
    volumes:
      - n8n_data:/home/node/.n8n
      - ./n8n/workflows:/home/node/.n8n/workflows:ro
    networks:
      - flowbit-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: flowbit-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - frontend-shell
      - backend
      - n8n
    networks:
      - flowbit-network

  # Seed Data Service
  seed-data:
    build:
      context: .
      dockerfile: seed-data.Dockerfile
    container_name: flowbit-seed-data
    environment:
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/flowbit?authSource=admin
      JWT_SECRET: ${JWT_SECRET:-your-super-secret-jwt-key-change-in-production}
    depends_on:
      mongodb:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - flowbit-network
    profiles:
      - seed

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local
  n8n_data:
    driver: local

networks:
  flowbit-network:
    driver: bridge 